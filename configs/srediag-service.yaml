receivers:
  otlp:
    protocols:
      grpc:
        endpoint: localhost:4317
      http:
        endpoint: localhost:4318
  hostmetrics:
    collection_interval: "${HOSTMETRICS_INTERVAL:-10s}"
    scrapers:
      cpu:
        metrics:
          system.cpu.time:
            enabled: true
          system.cpu.utilization:
            enabled: true
      disk:
        metrics:
          system.disk.operations:
            enabled: true
          system.disk.io:
            enabled: true
      filesystem:
        metrics:
          system.filesystem.usage:
            enabled: true
          system.filesystem.utilization:
            enabled: true
      memory:
        metrics:
          system.memory.usage:
            enabled: true
          system.memory.utilization:
            enabled: true
      network:
        metrics:
          system.network.connections:
            enabled: true
          system.network.io:
            enabled: true
      process:
        metrics:
          process.cpu.time:
            enabled: true
          process.memory.usage:
            enabled: true

processors:
  batch:
    timeout: 1s
    send_batch_size: 1024
  memory_limiter:
    check_interval: 1s
    limit_mib: 1500
    spike_limit_mib: 512
  
  resourcedetection:
    detectors: [env, system, docker, kubernetes]
    timeout: "${RESOURCE_DETECTION_TIMEOUT:-2s}"
    override: true
    
  k8sattributes:
    auth_type: "serviceAccount"
    extract:
      metadata:
        - k8s.pod.name
        - k8s.pod.uid
        - k8s.deployment.name
        - k8s.namespace.name
        - k8s.node.name
        - k8s.container.name
    filter:
      node_from_env_var: "K8S_NODE_NAME"

exporters:
  debug:
    verbosity: detailed
  otlp:
    endpoint: localhost:4317
    tls:
      insecure: true
  otlphttp:
    endpoint: http://localhost:4318
  prometheus:
    endpoint: "${PROMETHEUS_ENDPOINT:-0.0.0.0:9090}"
    namespace: "srediag"
    const_labels:
      deployment_environment: "${DEPLOYMENT_ENV:-production}"
    send_timestamps: true
    metric_expiration: 180m
    resource_to_telemetry_conversion:
      enabled: true

extensions:
  health_check:
    endpoint: "${HEALTH_CHECK_ENDPOINT:-0.0.0.0:13133}"
  pprof:
    endpoint: "${PPROF_ENDPOINT:-0.0.0.0:1777}"
  zpages:
    endpoint: localhost:55679

service:
  telemetry:
    logs:
      level: "${LOG_LEVEL:-info}"
      development: false
      encoding: json
    metrics:
      level: detailed
      address: "${METRICS_ADDRESS:-0.0.0.0:8888}"
  
  extensions: [health_check, pprof, zpages]
  
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, k8sattributes, resourcedetection, batch]
      exporters: [debug, otlp]
    metrics:
      receivers: [otlp, hostmetrics]
      processors: [memory_limiter, k8sattributes, resourcedetection, batch]
      exporters: [debug, otlp, prometheus]
    logs:
      receivers: [otlp]
      processors: [memory_limiter, k8sattributes, resourcedetection, batch]
      exporters: [debug, otlp] 
 