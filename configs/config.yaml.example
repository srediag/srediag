# SREDIAG Configuration Example

# Global settings
debug: false
log_level: "info"

# OpenTelemetry configuration
opentelemetry:
  service:
    name: "srediag"
    version: "1.0.0"
    environment: "production"
  
  resource_attributes:
    deployment.region: "us-east-1"
    service.instance.id: "${INSTANCE_ID}"
  
  collectors:
    system:
      type: "system-metrics"
      interval: "10s"
      metrics:
        - cpu
        - memory
        - disk
        - network
    
    kubernetes:
      type: "kubernetes-metrics"
      interval: "30s"
      clusters:
        - name: "prod-cluster"
          context: "prod"
  
  processors:
    - name: "resource-enrichment"
      type: "attribute-processor"
      attributes:
        environment: "production"
        region: "us-east-1"
    
    - name: "metric-filter"
      type: "filter-processor"
      metrics:
        include:
          - name: "cpu.usage"
          - name: "memory.usage"
  
  exporters:
    - name: "otlp"
      type: "otlp-exporter"
      endpoint: "observo-collector:4317"
      protocol: "grpc"
      tls:
        enabled: true
        cert: "/certs/client.crt"

# Plugin configuration
plugins:
  directory: "/opt/srediag/plugins"
  auto_discovery: true
  
  # Core plugins
  collectors:
    - name: "aws-collector"
      type: "aws-metrics"
      enabled: true
      config:
        region: "us-east-1"
        services:
          - "ec2"
          - "rds"
          - "lambda"
        credentials:
          type: "iam_role"
    
    - name: "k8s-collector"
      type: "kubernetes-metrics"
      enabled: true
      config:
        clusters:
          - name: "prod"
            context: "prod-cluster"
            namespaces:
              - "default"
              - "kube-system"
  
  processors:
    - name: "anomaly-detector"
      type: "ml-processor"
      enabled: true
      config:
        algorithm: "isolation-forest"
        sensitivity: 0.95
        training_period: "7d"
    
    - name: "alert-generator"
      type: "alert-processor"
      enabled: true
      config:
        rules_path: "/etc/srediag/rules"
        notification_channels:
          - "slack"
          - "pagerduty"
  
  exporters:
    - name: "elasticsearch"
      type: "elasticsearch-exporter"
      enabled: true
      config:
        endpoints:
          - "http://elasticsearch:9200"
        index_pattern: "srediag-%{+yyyy.MM.dd}"
        bulk_size: 1000
  
  # Specialized plugins
  diagnostics:
    - name: "system-diagnostics"
      type: "system-analyzer"
      enabled: true
      config:
        checks:
          - type: "disk"
            thresholds:
              usage_percent: 90
          - type: "memory"
            thresholds:
              usage_percent: 85
          - type: "cpu"
            thresholds:
              load_average: 5
    
    - name: "k8s-diagnostics"
      type: "kubernetes-analyzer"
      enabled: true
      config:
        checks:
          - type: "pod_health"
          - type: "node_health"
          - type: "resource_usage"
  
  analyzers:
    - name: "performance-analyzer"
      type: "perf-analyzer"
      enabled: true
      config:
        metrics:
          - "latency"
          - "throughput"
          - "error_rate"
        baseline_period: "7d"
    
    - name: "cost-analyzer"
      type: "cost-analyzer"
      enabled: true
      config:
        providers:
          - "aws"
          - "gcp"
        report_schedule: "0 0 * * *"
  
  integrations:
    - name: "slack"
      type: "notification"
      enabled: true
      config:
        webhook_url: "${SLACK_WEBHOOK_URL}"
        channels:
          - "#sre-alerts"
          - "#platform-ops"
    
    - name: "pagerduty"
      type: "incident"
      enabled: true
      config:
        api_key: "${PAGERDUTY_API_KEY}"
        service_id: "${PAGERDUTY_SERVICE_ID}"

# Security settings
security:
  tls:
    enabled: true
    cert_file: "/etc/srediag/certs/server.crt"
    key_file: "/etc/srediag/certs/server.key"
    ca_file: "/etc/srediag/certs/ca.crt"
  
  authentication:
    type: "token"
    token_file: "/etc/srediag/auth/token"
  
  authorization:
    type: "rbac"
    rules_file: "/etc/srediag/auth/rbac.yaml"

# Resource limits
resources:
  cpu_limit: "2"
  memory_limit: "2Gi"
  disk_limit: "10Gi" 
